{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialValue = {\n  posts: null\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialValue;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TEST':\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Model/reducer.ts"],"names":["initialValue","posts","reducer","state","action","type"],"mappings":";;;;;;AAEA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAKA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAyD;AAAA,MAAxDC,KAAwD,uEAAhDH,YAAgD;AAAA,MAAlCI,MAAkC;;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,MAAL;AAAa;AACZ,iCACIF,KADJ;AAGA;;AACD;AACC,aAAOA,KAAP;AAPF;AASA,CAVM","sourcesContent":["import { PostType } from '@API/REST'\r\n\r\nconst initialValue = {\r\n\tposts: null as PostType[] | null,\r\n}\r\n\r\ntype InitialValueType = typeof initialValue\r\nexport const reducer = (state = initialValue, action: any): InitialValueType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'TEST': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
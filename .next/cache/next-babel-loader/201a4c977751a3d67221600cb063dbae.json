{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\UI\\\\Organisms\\\\Forms\\\\CreatePost.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport { Form, Input, Button } from 'antd';\nvar Actions = styled.div.withConfig({\n  displayName: \"CreatePost__Actions\",\n  componentId: \"l162y8-0\"\n})([\"display:grid;grid-template-columns:repeat(2,max-content);grid-column-gap:15px;justify-content:center;\"]);\n_c = Actions;\nexport var CreatePostForm = function CreatePostForm(_ref) {\n  _s();\n\n  var onSubmit = _ref.onSubmit,\n      initialValue = _ref.initialValue;\n  var router = useRouter();\n  console.log('router', router);\n  var onCancel = useCallback(function () {\n    router.back();\n  }, [router]);\n  return __jsx(Form, {\n    name: \"post\",\n    initialValues: initialValue,\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, __jsx(Form.Item, {\n    label: \"Title\",\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: 'Please enter title of post!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, __jsx(Input, {\n    placeholder: \"Enter title of post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })), __jsx(Form.Item, {\n    label: \"Body\",\n    name: \"body\",\n    rules: [{\n      required: true,\n      message: 'Please enter body of post!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, __jsx(Input, {\n    placeholder: \"Enter body of post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  })), __jsx(Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(Button, {\n    type: \"dashed\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Create\"), __jsx(Button, {\n    type: \"dashed\",\n    danger: true,\n    onClick: onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Cancel\")));\n};\n\n_s(CreatePostForm, \"NDBqGsGzNQg1dWDswCrI2G20/WQ=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = CreatePostForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Actions\");\n$RefreshReg$(_c2, \"CreatePostForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/UI/Organisms/Forms/CreatePost.tsx"],"names":["React","useCallback","styled","useRouter","Form","Input","Button","Actions","div","CreatePostForm","onSubmit","initialValue","router","console","log","onCancel","back","required","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAGA,IAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,6GAAb;KAAMD,O;AAUN,OAAO,IAAME,cAAmC,GAAG,SAAtCA,cAAsC,OAGzB;AAAA;;AAAA,MAFzBC,QAEyB,QAFzBA,QAEyB;AAAA,MADzBC,YACyB,QADzBA,YACyB;AACzB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,MAAMG,QAAQ,GAAGd,WAAW,CAAC,YAAM;AAClCW,IAAAA,MAAM,CAACI,IAAP;AACA,GAF2B,EAEzB,CAACJ,MAAD,CAFyB,CAA5B;AAGA,SACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,aAAa,EAAED,YAAjC;AAA+C,IAAA,QAAQ,EAAED,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD,CAAM,IAAN;AACC,IAAA,KAAK,EAAC,OADP;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,KAAK,EAAE,CAAC;AAAEO,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,EAQC,MAAC,IAAD,CAAM,IAAN;AACC,IAAA,KAAK,EAAC,MADP;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CARD,EAeC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAIC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,MAAM,MAA5B;AAA6B,IAAA,OAAO,EAAEH,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,CAfD,CADD;AA0BA,CAnCM;;GAAMN,c;UAIGN,S;;;MAJHM,c","sourcesContent":["import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouter } from 'next/router'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { PostType } from '@API/REST'\r\n\r\nconst Actions = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(2, max-content);\r\n\tgrid-column-gap: 15px;\r\n\tjustify-content: center;\r\n`\r\ninterface PropsType {\r\n\tonSubmit: (data: PostType) => void\r\n\tinitialValue: PostType\r\n}\r\nexport const CreatePostForm: React.FC<PropsType> = ({\r\n\tonSubmit,\r\n\tinitialValue,\r\n}): React.ReactElement => {\r\n\tconst router = useRouter()\r\n\tconsole.log('router', router)\r\n\tconst onCancel = useCallback(() => {\r\n\t\trouter.back()\r\n\t}, [router])\r\n\treturn (\r\n\t\t<Form name='post' initialValues={initialValue} onFinish={onSubmit}>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel='Title'\r\n\t\t\t\tname='title'\r\n\t\t\t\trules={[{ required: true, message: 'Please enter title of post!' }]}\r\n\t\t\t>\r\n\t\t\t\t<Input placeholder='Enter title of post' />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel='Body'\r\n\t\t\t\tname='body'\r\n\t\t\t\trules={[{ required: true, message: 'Please enter body of post!' }]}\r\n\t\t\t>\r\n\t\t\t\t<Input placeholder='Enter body of post' />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Actions>\r\n\t\t\t\t<Button type='dashed' htmlType='submit'>\r\n\t\t\t\t\tCreate\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button type='dashed' danger onClick={onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t</Actions>\r\n\t\t</Form>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
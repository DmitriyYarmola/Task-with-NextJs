{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { API } from '@API/index';\nimport styled from 'styled-components';\nimport { PostsActionsComponent } from '@Features/Posts';\nimport { Preloader } from '@UI/Atoms';\nvar ContentWrapped = styled.div.withConfig({\n  displayName: \"pages__ContentWrapped\",\n  componentId: \"sc-5izoex-0\"\n})([\"\"]);\n_c = ContentWrapped;\n\nvar HomePage = function HomePage(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n  var isLoading = useSelector(PostsSelectors.isLoading);\n  return !isLoading ? __jsx(ContentWrapped, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, __jsx(PostsActionsComponent, {\n    posts: posts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  })) : __jsx(Preloader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  });\n};\n\n_s(HomePage, \"d6XrFDadzEONiFFjLDEOApa00Ck=\", true);\n\n_c2 = HomePage;\n\nvar getStaticProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return API.PostsAPI.getPosts();\n\n          case 2:\n            response = _context.sent;\n            posts = response.data;\n            console.log(posts);\n            return _context.abrupt(\"return\", {\n              props: {\n                posts: posts\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStaticProps() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default HomePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContentWrapped\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/pages/index.tsx"],"names":["React","API","styled","PostsActionsComponent","Preloader","ContentWrapped","div","HomePage","posts","isLoading","useSelector","PostsSelectors","getStaticProps","PostsAPI","getPosts","response","data","console","log","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,IAAMC,cAAc,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,QAApB;KAAMD,c;;AAIN,IAAME,QAA6B,GAAG,SAAhCA,QAAgC,OAAmC;AAAA;;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AACxE,MAAMC,SAAS,GAAGC,WAAW,CAACC,cAAc,CAACF,SAAhB,CAA7B;AACA,SAAO,CAACA,SAAD,GACN,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,qBAAD;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADM,GAIH,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAKA,CAPD;;GAAMD,Q;;MAAAA,Q;;AAQN,IAAMK,cAAc;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCX,GAAG,CAACY,QAAJ,CAAaC,QAAb,EADD;;AAAA;AAChBC,YAAAA,QADgB;AAEhBP,YAAAA,KAFgB,GAERO,QAAQ,CAACC,IAFD;AAGtBC,YAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAHsB,6CAIf;AACNW,cAAAA,KAAK,EAAE;AACNX,gBAAAA,KAAK,EAALA;AADM;AADD,aAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdI,cAAc;AAAA;AAAA;AAAA,GAApB;;AAUA,eAAeL,QAAf","sourcesContent":["import React from 'react'\r\nimport { API, PostType } from '@API/index'\r\nimport styled from 'styled-components'\r\nimport { PostsActionsComponent } from '@Features/Posts'\r\nimport { Preloader } from '@UI/Atoms'\r\n\r\nconst ContentWrapped = styled.div``\r\ninterface PropsType {\r\n\tposts: PostType[]\r\n}\r\nconst HomePage: React.FC<PropsType> = ({ posts }): React.ReactElement => {\r\n\tconst isLoading = useSelector(PostsSelectors.isLoading)\r\n\treturn !isLoading ? (\r\n\t\t<ContentWrapped>\r\n\t\t\t<PostsActionsComponent posts={posts} />\r\n\t\t</ContentWrapped>\r\n\t) : <Preloader />\r\n}\r\nconst getStaticProps = async (): Promise<{ props: { posts: PostType[] } }> => {\r\n\tconst response = await API.PostsAPI.getPosts()\r\n\tconst posts = response.data\r\n\tconsole.log(posts)\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tposts,\r\n\t\t},\r\n\t}\r\n}\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}
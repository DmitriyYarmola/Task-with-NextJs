{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\Features\\\\Posts\\\\Organisms\\\\Post.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'antd';\nimport { PostInformation } from '@UI/Organisms';\nimport { CommentItem } from '@UI/Atoms';\nimport { Actions } from '../Molecules';\nvar Wrapped = styled.div.withConfig({\n  displayName: \"Post__Wrapped\",\n  componentId: \"z17osf-0\"\n})([\"width:550px;height:100%;margin:0 auto;\"]);\n_c = Wrapped;\nvar Information = styled.div.withConfig({\n  displayName: \"Post__Information\",\n  componentId: \"z17osf-1\"\n})([\"\"]);\n_c2 = Information;\nvar PositionWrapped = styled.div.withConfig({\n  displayName: \"Post__PositionWrapped\",\n  componentId: \"z17osf-2\"\n})([\"display:grid;align-items:center;\"]);\n_c3 = PositionWrapped;\nexport var Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = post.id,\n      title = post.title,\n      body = post.body,\n      comments = post.comments;\n  var dispatch = useDispatch();\n  var onEdit = useCallback(function () {\n    dispatch({\n      type: 'EDIT_POST',\n      payload: {\n        id: id\n      }\n    });\n  }, [dispatch, id]);\n  return __jsx(PositionWrapped, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, __jsx(Wrapped, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, __jsx(Actions, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: onEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, \"Edit\")), __jsx(Information, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(PostInformation, {\n    title: title,\n    body: body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, __jsx(React.Fragment, null, comments.map(function (_ref2) {\n    var body = _ref2.body,\n        id = _ref2.id;\n    return __jsx(CommentItem, {\n      key: id,\n      body: body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    });\n  }))))));\n};\n\n_s(Post, \"HXjrGGCJTHa/Z+SGhXPrzUNakAQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c4 = Post;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapped\");\n$RefreshReg$(_c2, \"Information\");\n$RefreshReg$(_c3, \"PositionWrapped\");\n$RefreshReg$(_c4, \"Post\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Organisms/Post.tsx"],"names":["React","useCallback","styled","useDispatch","Button","PostInformation","CommentItem","Actions","Wrapped","div","Information","PositionWrapped","Post","post","id","title","body","comments","dispatch","onEdit","type","payload","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,8CAAb;KAAMD,O;AAKN,IAAME,WAAW,GAAGR,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,QAAjB;MAAMC,W;AACN,IAAMC,eAAe,GAAGT,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,wCAArB;MAAME,e;AAON,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAAkC;AAAA;;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAClEC,EADkE,GACpCD,IADoC,CAClEC,EADkE;AAAA,MAC9DC,KAD8D,GACpCF,IADoC,CAC9DE,KAD8D;AAAA,MACvDC,IADuD,GACpCH,IADoC,CACvDG,IADuD;AAAA,MACjDC,QADiD,GACpCJ,IADoC,CACjDI,QADiD;AAE1E,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,MAAM,GAAGlB,WAAW,CAAC,YAAM;AAChCiB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAAEP,QAAAA,EAAE,EAAFA;AAAF;AAA9B,KAAD,CAAR;AACA,GAFyB,EAEvB,CAACI,QAAD,EAAWJ,EAAX,CAFuB,CAA1B;AAGA,SACC,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,OAAD;AAAS,IAAA,EAAE,EAAEA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADD,EAIC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAEJ,KAAxB;AAA+B,IAAA,IAAI,EAAEC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,4BACEC,QAAQ,CAACK,GAAT,CAAa,iBAAkB;AAAA,QAAfN,IAAe,SAAfA,IAAe;AAAA,QAATF,EAAS,SAATA,EAAS;AAC/B,WAAO,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,EAAlB;AAAsB,MAAA,IAAI,EAAEE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAFA,CADF,CADD,CADD,CAJD,CADD,CADD;AAkBA,CAxBM;;GAAMJ,I;UAEKT,W;;;MAFLS,I","sourcesContent":["import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button } from 'antd'\r\nimport { PostInformationType } from '@API/REST'\r\nimport { PostInformation } from '@UI/Organisms'\r\nimport { CommentItem } from '@UI/Atoms'\r\nimport { Actions } from '../Molecules'\r\n\r\nconst Wrapped = styled.div`\r\n\twidth: 550px;\r\n\theight: 100%;\r\n\tmargin: 0 auto;\r\n`\r\nconst Information = styled.div``\r\nconst PositionWrapped = styled.div`\r\n\tdisplay: grid;\r\n\talign-items: center;\r\n`\r\ninterface PropsType {\r\n\tpost: PostInformationType\r\n}\r\nexport const Post: React.FC<PropsType> = ({ post }): React.ReactElement => {\r\n\tconst { id, title, body, comments } = post\r\n\tconst dispatch = useDispatch()\r\n\tconst onEdit = useCallback(() => {\r\n\t\tdispatch({ type: 'EDIT_POST', payload: { id } })\r\n\t}, [dispatch, id])\r\n\treturn (\r\n\t\t<PositionWrapped>\r\n\t\t\t<Wrapped>\r\n\t\t\t\t<Actions id={id}>\r\n\t\t\t\t\t<Button onClick={onEdit}>Edit</Button>\r\n\t\t\t\t</Actions>\r\n\t\t\t\t<Information>\r\n\t\t\t\t\t<PostInformation title={title} body={body}>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{comments.map(({ body, id }) => {\r\n\t\t\t\t\t\t\t\treturn <CommentItem key={id} body={body} />\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</PostInformation>\r\n\t\t\t\t</Information>\r\n\t\t\t</Wrapped>\r\n\t\t</PositionWrapped>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
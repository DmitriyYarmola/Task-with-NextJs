{"ast":null,"code":"import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { actions } from '@Features/Posts/Model/actions';\nimport { API } from '@API/index';\nimport * as types from './types';\n\nfunction* getPostsSaga() {\n  yield put(actions.setLoading(true));\n\n  try {\n    const response = yield call(API.PostsAPI.getPosts);\n    yield put(actions.setPosts(response.data));\n    yield put(actions.setLoading(false));\n  } catch (error) {\n    yield put(actions.setLoading(false));\n    console.log(error);\n  }\n}\n\nexport function* rootSaga() {\n  yield all([takeEvery(types.SET_POSTS, getPostsSaga)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Model/saga.ts"],"names":["call","put","all","takeEvery","actions","API","types","getPostsSaga","setLoading","response","PostsAPI","getPosts","setPosts","data","error","console","log","rootSaga","SET_POSTS"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;AAEA,UAAUC,YAAV,GAAyB;AACxB,QAAMN,GAAG,CAACG,OAAO,CAACI,UAAR,CAAmB,IAAnB,CAAD,CAAT;;AACA,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACK,GAAG,CAACK,QAAJ,CAAaC,QAAd,CAA3B;AACA,UAAMV,GAAG,CAACG,OAAO,CAACQ,QAAR,CAAiBH,QAAQ,CAACI,IAA1B,CAAD,CAAT;AACA,UAAMZ,GAAG,CAACG,OAAO,CAACI,UAAR,CAAmB,KAAnB,CAAD,CAAT;AACA,GAJD,CAIE,OAAOM,KAAP,EAAc;AACf,UAAMb,GAAG,CAACG,OAAO,CAACI,UAAR,CAAmB,KAAnB,CAAD,CAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD;;AACD,OAAO,UAAUG,QAAV,GAAqB;AAC3B,QAAMf,GAAG,CAAC,CAACC,SAAS,CAACG,KAAK,CAACY,SAAP,EAAkBX,YAAlB,CAAV,CAAD,CAAT;AACA","sourcesContent":["import { call, put, all, takeEvery } from 'redux-saga/effects'\r\nimport { actions } from '@Features/Posts/Model/actions'\r\nimport { API } from '@API/index'\r\nimport * as types from './types'\r\n\r\nfunction* getPostsSaga() {\r\n\tyield put(actions.setLoading(true))\r\n\ttry {\r\n\t\tconst response = yield call(API.PostsAPI.getPosts)\r\n\t\tyield put(actions.setPosts(response.data))\r\n\t\tyield put(actions.setLoading(false))\r\n\t} catch (error) {\r\n\t\tyield put(actions.setLoading(false))\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\nexport function* rootSaga() {\r\n\tyield all([takeEvery(types.SET_POSTS, getPostsSaga)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
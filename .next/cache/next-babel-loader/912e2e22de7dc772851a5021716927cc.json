{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { MainTemplate } from '@UI/Templates';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '@Styled/theme';\nimport { Provider } from 'react-redux'; // import { makeStore } from '@Lib/Store'\n\nimport App from 'next/app';\nimport { wrapper } from '@Lib/Store/store';\n\n// const MyApp: React.FC<PropsType> = ({ Component, pageProps }) => {\n// \tconst store = makeStore(pageProps.initialReduxState)\n// \treturn (\n// \t\t<Provider store={store}>\n// \t\t\t<ThemeProvider theme={theme}>\n// \t\t\t\t<MainTemplate>\n// \t\t\t\t\t<Component {...pageProps} />\n// \t\t\t\t</MainTemplate>\n// \t\t\t</ThemeProvider>\n// \t\t</Provider>\n// \t)\n// }\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    // public static getInitialProps = async ({ Component, ctx }: AppContext) => {\n    // \tctx.store.dispatch({ type: 'APP', payload: 'was set in _app' })\n    //\n    // \treturn {\n    // \t\tpageProps: {\n    // \t\t\t...(Component.getInitialProps ? await Component.getInitialProps(ctx) : {}),\n    // \t\t\tappProp: ctx.pathname,\n    // \t\t},\n    // \t}\n    // }\n    value: function render() {\n      // @ts-ignore\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 4\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }\n      }, __jsx(MainTemplate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      })))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default _c = wrapper.withRedux(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/pages/_app.tsx"],"names":["React","MainTemplate","ThemeProvider","theme","Provider","App","wrapper","MyApp","props","Component","pageProps","store","withRedux"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AAGA,OAAOC,GAAP,MAAgC,UAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEMC,K;;;;;;;;;;;;;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACR;AADQ,wBAEgC,KAAKC,KAFrC;AAAA,UAEAC,SAFA,eAEAA,SAFA;AAAA,UAEWC,SAFX,eAEWA,SAFX;AAAA,UAEsBC,KAFtB,eAEsBA,KAFtB;AAIR,aACC,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,aAAD;AAAe,QAAA,KAAK,EAAER,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADD,CADD,CADD;AASA;;;;EAzBkBL,G;;AA4BpB,oBAAeC,OAAO,CAACM,SAAR,CAAkBL,KAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { MainTemplate } from '@UI/Templates'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { theme } from '@Styled/theme'\r\nimport { Provider } from 'react-redux'\r\n// import { makeStore } from '@Lib/Store'\r\nimport { store } from 'next/dist/build/output/store'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport App, { AppContext } from 'next/app'\r\nimport { wrapper } from '@Lib/Store/store'\r\n\r\ninterface PropsType {\r\n\tComponent: any\r\n\tpagePropsType: any\r\n}\r\n// const MyApp: React.FC<PropsType> = ({ Component, pageProps }) => {\r\n// \tconst store = makeStore(pageProps.initialReduxState)\r\n// \treturn (\r\n// \t\t<Provider store={store}>\r\n// \t\t\t<ThemeProvider theme={theme}>\r\n// \t\t\t\t<MainTemplate>\r\n// \t\t\t\t\t<Component {...pageProps} />\r\n// \t\t\t\t</MainTemplate>\r\n// \t\t\t</ThemeProvider>\r\n// \t\t</Provider>\r\n// \t)\r\n// }\r\n\r\nclass MyApp extends App {\r\n\t// public static getInitialProps = async ({ Component, ctx }: AppContext) => {\r\n\t// \tctx.store.dispatch({ type: 'APP', payload: 'was set in _app' })\r\n\t//\r\n\t// \treturn {\r\n\t// \t\tpageProps: {\r\n\t// \t\t\t...(Component.getInitialProps ? await Component.getInitialProps(ctx) : {}),\r\n\t// \t\t\tappProp: ctx.pathname,\r\n\t// \t\t},\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\t// @ts-ignore\r\n\t\tconst { Component, pageProps, store } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<MainTemplate>\r\n\t\t\t\t\t\t<Component {...pageProps} />\r\n\t\t\t\t\t</MainTemplate>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default wrapper.withRedux(MyApp)\r\n"]},"metadata":{},"sourceType":"module"}
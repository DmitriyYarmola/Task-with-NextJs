{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\Features\\\\Posts\\\\Organisms\\\\PostsActions.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListPosts, PostsSelectors } from '@Features/Posts';\nimport { CreatePostForm } from '@UI/Organisms';\nimport { Button } from '@UI/Atoms';\nvar Wrapped = styled.div.withConfig({\n  displayName: \"PostsActions__Wrapped\",\n  componentId: \"sc-1pivswp-0\"\n})([\"\"]);\n_c = Wrapped;\nvar PostsWrapped = styled.div.withConfig({\n  displayName: \"PostsActions__PostsWrapped\",\n  componentId: \"sc-1pivswp-1\"\n})([\"margin:30px 0;\"]);\n_c2 = PostsWrapped;\nexport var PostsActions = function PostsActions(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useState = useState(false),\n      isOpenCreatePost = _useState[0],\n      setIsOpenCreatePost = _useState[1];\n\n  var test = useSelector(PostsSelectors.posts);\n  useEffect(function () {\n    console.log(test);\n  }, [test]);\n  console.log(test);\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function (value) {\n    dispatch({\n      type: 'GET_POSTS'\n    });\n    setIsOpenCreatePost(!isOpenCreatePost);\n  }, [dispatch, isOpenCreatePost]);\n  return __jsx(Wrapped, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setIsOpenCreatePost(!isOpenCreatePost);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"Create\"), __jsx(PostsWrapped, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, __jsx(ListPosts, {\n    posts: posts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  })), isOpenCreatePost && __jsx(CreatePostForm, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }));\n};\n\n_s(PostsActions, \"TTLWAsySV3a9IpAQQlE8HtrGuTU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c3 = PostsActions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapped\");\n$RefreshReg$(_c2, \"PostsWrapped\");\n$RefreshReg$(_c3, \"PostsActions\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Organisms/PostsActions.tsx"],"names":["React","useCallback","useEffect","useState","styled","useDispatch","useSelector","ListPosts","PostsSelectors","CreatePostForm","Button","Wrapped","div","PostsWrapped","PostsActions","posts","isOpenCreatePost","setIsOpenCreatePost","test","console","log","dispatch","onSubmit","value","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,iBAA1C;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,QAAb;KAAMD,O;AACN,IAAME,YAAY,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,sBAAlB;MAAMC,Y;AAMN,OAAO,IAAMC,YAAiC,GAAG,SAApCA,YAAoC,OAAmC;AAAA;;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;;AAAA,kBACnCZ,QAAQ,CAAC,KAAD,CAD2B;AAAA,MAC5Ea,gBAD4E;AAAA,MAC1DC,mBAD0D;;AAEnF,MAAMC,IAAI,GAAGZ,WAAW,CAACE,cAAc,CAACO,KAAhB,CAAxB;AACAb,EAAAA,SAAS,CAAC,YAAM;AACfiB,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,QAAQ,GAAGrB,WAAW,CAC3B,UAACsB,KAAD,EAA4C;AAC3CF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAP,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACA,GAJ0B,EAK3B,CAACK,QAAD,EAAWL,gBAAX,CAL2B,CAA5B;AAOA,SACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AACC,IAAA,OAAO,EAAE,mBAAM;AACdC,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACA,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAQC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARD,EAWEC,gBAAgB,IAAI,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEM,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXtB,CADD;AAeA,CA9BM;;GAAMR,Y;UAECR,W,EAKID,W;;;MAPLS,Y","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListPosts, PostsSelectors } from '@Features/Posts'\r\nimport { PostType } from '@API/REST'\r\nimport { CreatePostForm } from '@UI/Organisms'\r\nimport { Button } from '@UI/Atoms'\r\n\r\nconst Wrapped = styled.div``\r\nconst PostsWrapped = styled.div`\r\n\tmargin: 30px 0;\r\n`\r\ninterface PropsType {\r\n\tposts: PostType[]\r\n}\r\nexport const PostsActions: React.FC<PropsType> = ({ posts }): React.ReactElement => {\r\n\tconst [isOpenCreatePost, setIsOpenCreatePost] = useState(false)\r\n\tconst test = useSelector(PostsSelectors.posts)\r\n\tuseEffect(() => {\r\n\t\tconsole.log(test)\r\n\t}, [test])\r\n\tconsole.log(test)\r\n\tconst dispatch = useDispatch()\r\n\tconst onSubmit = useCallback(\r\n\t\t(value: { title: string; body: string }) => {\r\n\t\t\tdispatch({ type: 'GET_POSTS' })\r\n\t\t\tsetIsOpenCreatePost(!isOpenCreatePost)\r\n\t\t},\r\n\t\t[dispatch, isOpenCreatePost]\r\n\t)\r\n\treturn (\r\n\t\t<Wrapped>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetIsOpenCreatePost(!isOpenCreatePost)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCreate\r\n\t\t\t</Button>\r\n\t\t\t<PostsWrapped>\r\n\t\t\t\t<ListPosts posts={posts} />\r\n\t\t\t</PostsWrapped>\r\n\t\t\t{isOpenCreatePost && <CreatePostForm onSubmit={onSubmit} />}\r\n\t\t</Wrapped>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PostsSelectors, Post } from '@Features/Posts';\nimport { Preloader } from '@UI/Atoms';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nconst PostPage = () => {\n  const isLoading = useSelector(PostsSelectors.isLoading);\n  const post = useSelector(PostsSelectors.post);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    dispatch({\n      type: 'VIEW_POST',\n      payload: {\n        id: router.query.id\n      }\n    });\n  }, [dispatch, router.query.id]);\n  if (id && !post && !isLoading) router.query.push('/');\n  return !isLoading && post ? __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }) : __jsx(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 53\n    }\n  });\n};\n\nexport default PostPage;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/pages/posts/[id].tsx"],"names":["useDispatch","useSelector","PostsSelectors","Post","Preloader","useEffect","useRouter","PostPage","isLoading","post","dispatch","router","type","payload","id","query","push"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,IAAzB,QAAqC,iBAArC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAA0B;AAC1C,QAAMC,SAAS,GAAGP,WAAW,CAACC,cAAc,CAACM,SAAhB,CAA7B;AACA,QAAMC,IAAI,GAAGR,WAAW,CAACC,cAAc,CAACO,IAAhB,CAAxB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,MAAM,GAAGL,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEH,MAAM,CAACI,KAAP,CAAaD;AAAnB;AAA9B,KAAD,CAAR;AACA,GAFQ,EAEN,CAACJ,QAAD,EAAWC,MAAM,CAACI,KAAP,CAAaD,EAAxB,CAFM,CAAT;AAGA,MAAIA,EAAE,IAAI,CAACL,IAAP,IAAe,CAACD,SAApB,EAA+BG,MAAM,CAACI,KAAP,CAAaC,IAAb,CAAkB,GAAlB;AAC/B,SAAO,CAACR,SAAD,IAAcC,IAAd,GAAqB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GAA4C,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnD;AACA,CAVD;;AAYA,eAAeF,QAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\nimport { PostsSelectors, Post } from '@Features/Posts'\r\nimport { Preloader } from '@UI/Atoms'\r\nimport { useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\n\r\nconst PostPage = (): React.ReactElement => {\r\n\tconst isLoading = useSelector(PostsSelectors.isLoading)\r\n\tconst post = useSelector(PostsSelectors.post)\r\n\tconst dispatch = useDispatch()\r\n\tconst router = useRouter()\r\n\tuseEffect(() => {\r\n\t\tdispatch({ type: 'VIEW_POST', payload: { id: router.query.id } })\r\n\t}, [dispatch, router.query.id])\r\n\tif (id && !post && !isLoading) router.query.push('/')\r\n\treturn !isLoading && post ? <Post post={post} /> : <Preloader />\r\n}\r\n\r\nexport default PostPage\r\n"]},"metadata":{},"sourceType":"module"}
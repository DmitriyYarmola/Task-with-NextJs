{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\Features\\\\Posts\\\\Organisms\\\\PostsActions.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { PostsSelectors } from '@Features/Posts';\nimport { CreatePostForm } from '@UI/Organisms';\nimport { Button } from '@UI/Atoms';\nimport { ListPosts } from '../Molecules';\nconst Wrapped = styled.div.withConfig({\n  displayName: \"PostsActions__Wrapped\",\n  componentId: \"sc-1pivswp-0\"\n})([\"\"]);\nconst PostsWrapped = styled.div.withConfig({\n  displayName: \"PostsActions__PostsWrapped\",\n  componentId: \"sc-1pivswp-1\"\n})([\"margin:30px 0;\"]);\nexport const PostsActions = ({\n  posts\n}) => {\n  const {\n    0: isOpenCreatePost,\n    1: setIsOpenCreatePost\n  } = useState(false);\n  const router = useRouter();\n  const test = useSelector(PostsSelectors.posts);\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n  console.log(test);\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(value => {\n    dispatch({\n      type: 'GET_POSTS'\n    });\n    setIsOpenCreatePost(!isOpenCreatePost);\n  }, [dispatch, isOpenCreatePost]);\n  return __jsx(Wrapped, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      router.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, \"Create\"), __jsx(PostsWrapped, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, __jsx(ListPosts, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  })), isOpenCreatePost && __jsx(CreatePostForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Organisms/PostsActions.tsx"],"names":["React","useCallback","useEffect","useState","styled","useDispatch","useSelector","useRouter","PostsSelectors","CreatePostForm","Button","ListPosts","Wrapped","div","PostsWrapped","PostsActions","posts","isOpenCreatePost","setIsOpenCreatePost","router","test","console","log","dispatch","onSubmit","value","type","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAAb;AACA,MAAMC,YAAY,GAAGV,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,sBAAlB;AAMA,OAAO,MAAME,YAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AACnF,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0Cf,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMgB,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,IAAI,GAAGd,WAAW,CAACE,cAAc,CAACQ,KAAhB,CAAxB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,QAAQ,GAAGvB,WAAW,CAC1BwB,KAAD,IAA4C;AAC3CF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAR,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACA,GAJ0B,EAK3B,CAACM,QAAD,EAAWN,gBAAX,CAL2B,CAA5B;AAOA,SACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AACC,IAAA,OAAO,EAAE,MAAM;AACdE,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAQC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEX,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARD,EAWEC,gBAAgB,IAAI,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEO,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXtB,CADD;AAeA,CA/BM","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useRouter } from 'next/router'\r\nimport { PostsSelectors } from '@Features/Posts'\r\nimport { PostType } from '@API/REST'\r\nimport { CreatePostForm } from '@UI/Organisms'\r\nimport { Button } from '@UI/Atoms'\r\nimport { ListPosts } from '../Molecules'\r\n\r\nconst Wrapped = styled.div``\r\nconst PostsWrapped = styled.div`\r\n\tmargin: 30px 0;\r\n`\r\ninterface PropsType {\r\n\tposts: PostType[]\r\n}\r\nexport const PostsActions: React.FC<PropsType> = ({ posts }): React.ReactElement => {\r\n\tconst [isOpenCreatePost, setIsOpenCreatePost] = useState(false)\r\n\tconst router = useRouter()\r\n\tconst test = useSelector(PostsSelectors.posts)\r\n\tuseEffect(() => {\r\n\t\tconsole.log(test)\r\n\t}, [test])\r\n\tconsole.log(test)\r\n\tconst dispatch = useDispatch()\r\n\tconst onSubmit = useCallback(\r\n\t\t(value: { title: string; body: string }) => {\r\n\t\t\tdispatch({ type: 'GET_POSTS' })\r\n\t\t\tsetIsOpenCreatePost(!isOpenCreatePost)\r\n\t\t},\r\n\t\t[dispatch, isOpenCreatePost]\r\n\t)\r\n\treturn (\r\n\t\t<Wrapped>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\trouter.push('/')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCreate\r\n\t\t\t</Button>\r\n\t\t\t<PostsWrapped>\r\n\t\t\t\t<ListPosts posts={posts} />\r\n\t\t\t</PostsWrapped>\r\n\t\t\t{isOpenCreatePost && <CreatePostForm onSubmit={onSubmit} />}\r\n\t\t</Wrapped>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
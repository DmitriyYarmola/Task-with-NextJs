{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\Features\\\\Posts\\\\Molecules\\\\ListPosts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { PostItem } from '@UI/Organisms';\nvar Posts = styled.div.withConfig({\n  displayName: \"ListPosts__Posts\",\n  componentId: \"sc-1ab65y6-0\"\n})([\"display:grid;grid-template-columns:repeat(3,1fr);grid-gap:20px;\"]);\n_c = Posts;\nexport var ListPosts = function ListPosts(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n  var dispatch = useDispatch();\n  var onEdit = useCallback(function (id) {\n    dispatch({\n      type: 'GET_POSTS'\n    });\n  }, [dispatch]);\n  var onDelete = useCallback(function (id) {\n    dispatch({\n      type: 'DELETE_POST',\n      payload: {\n        id: id\n      }\n    });\n  }, []);\n  return __jsx(Posts, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, posts.map(function (_ref2) {\n    var title = _ref2.title,\n        body = _ref2.body,\n        id = _ref2.id;\n    return __jsx(PostItem, {\n      key: id,\n      id: id,\n      title: title,\n      body: body,\n      onEdit: onEdit,\n      onDelete: onDelete,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    });\n  }));\n};\n\n_s(ListPosts, \"VCh2zn+LF1rDOwiC7UOFLVF7n3o=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = ListPosts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"ListPosts\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Molecules/ListPosts.tsx"],"names":["React","useCallback","styled","useDispatch","PostItem","Posts","div","ListPosts","posts","dispatch","onEdit","id","type","onDelete","payload","map","title","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,eAAzB;AAIA,IAAMC,KAAK,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,uEAAX;KAAMD,K;AAQN,OAAO,IAAME,SAA8B,GAAG,SAAjCA,SAAiC,OAAmC;AAAA;;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAChF,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,MAAM,GAAGT,WAAW,CACzB,UAACU,EAAD,EAAgB;AACfF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,GAHwB,EAIzB,CAACH,QAAD,CAJyB,CAA1B;AAMA,MAAMI,QAAQ,GAAGZ,WAAW,CAAC,UAACU,EAAD,EAAgB;AAC5CF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA,OAAO,EAAE;AAAEH,QAAAA,EAAE,EAAFA;AAAF;AAAhC,KAAD,CAAR;AACA,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,SACC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACO,GAAN,CAAU;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,IAAV,SAAUA,IAAV;AAAA,QAAgBN,EAAhB,SAAgBA,EAAhB;AAAA,WACV,MAAC,QAAD;AACC,MAAA,GAAG,EAAEA,EADN;AAEC,MAAA,EAAE,EAAEA,EAFL;AAGC,MAAA,KAAK,EAAEK,KAHR;AAIC,MAAA,IAAI,EAAEC,IAJP;AAKC,MAAA,MAAM,EAAEP,MALT;AAMC,MAAA,QAAQ,EAAEG,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAV,CADF,CADD;AAcA,CA1BM;;GAAMN,S;UACKJ,W;;;MADLI,S","sourcesContent":["import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { PostType } from '@API/REST'\r\nimport { PostItem } from '@UI/Organisms'\r\nimport { API } from '@API/index'\r\nimport { PostsActions as Actions } from '@Features/Posts'\r\n\r\nconst Posts = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(3, 1fr);\r\n\tgrid-gap: 20px;\r\n`\r\ninterface PropsType {\r\n\tposts: PostType[]\r\n}\r\nexport const ListPosts: React.FC<PropsType> = ({ posts }): React.ReactElement => {\r\n\tconst dispatch = useDispatch()\r\n\tconst onEdit = useCallback(\r\n\t\t(id: number) => {\r\n\t\t\tdispatch({ type: 'GET_POSTS' })\r\n\t\t},\r\n\t\t[dispatch]\r\n\t)\r\n\tconst onDelete = useCallback((id: number) => {\r\n\t\tdispatch({ type: 'DELETE_POST', payload: { id } })\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Posts>\r\n\t\t\t{posts.map(({ title, body, id }: PostType) => (\r\n\t\t\t\t<PostItem\r\n\t\t\t\t\tkey={id}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tbody={body}\r\n\t\t\t\t\tonEdit={onEdit}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</Posts>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { API } from '@API/index';\nimport styled from 'styled-components';\nimport { PostsActionsComponent } from '@Features/Posts';\nimport { Preloader } from '@UI/Atoms';\nconst ContentWrapped = styled.div.withConfig({\n  displayName: \"pages__ContentWrapped\",\n  componentId: \"sc-5izoex-0\"\n})([\"\"]);\n\nconst HomePage = ({\n  posts\n}) => {\n  const isLoading = useSelector(PostsSelectors.isLoading);\n  return !isLoading ? __jsx(ContentWrapped, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, __jsx(PostsActionsComponent, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  })) : __jsx(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  });\n};\n\nconst getStaticProps = async () => {\n  const response = await API.PostsAPI.getPosts();\n  const posts = response.data;\n  console.log(posts);\n  return {\n    props: {\n      posts\n    }\n  };\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/pages/index.tsx"],"names":["React","API","styled","PostsActionsComponent","Preloader","ContentWrapped","div","HomePage","posts","isLoading","useSelector","PostsSelectors","getStaticProps","response","PostsAPI","getPosts","data","console","log","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,QAApB;;AAIA,MAAMC,QAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AACxE,QAAMC,SAAS,GAAGC,WAAW,CAACC,cAAc,CAACF,SAAhB,CAA7B;AACA,SAAO,CAACA,SAAD,GACN,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,qBAAD;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADM,GAIH,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAKA,CAPD;;AAQA,MAAMI,cAAc,GAAG,YAAuD;AAC7E,QAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,QAAJ,CAAaC,QAAb,EAAvB;AACA,QAAMP,KAAK,GAAGK,QAAQ,CAACG,IAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,SAAO;AACNW,IAAAA,KAAK,EAAE;AACNX,MAAAA;AADM;AADD,GAAP;AAKA,CATD;;AAUA,eAAeD,QAAf","sourcesContent":["import React from 'react'\r\nimport { API, PostType } from '@API/index'\r\nimport styled from 'styled-components'\r\nimport { PostsActionsComponent } from '@Features/Posts'\r\nimport { Preloader } from '@UI/Atoms'\r\n\r\nconst ContentWrapped = styled.div``\r\ninterface PropsType {\r\n\tposts: PostType[]\r\n}\r\nconst HomePage: React.FC<PropsType> = ({ posts }): React.ReactElement => {\r\n\tconst isLoading = useSelector(PostsSelectors.isLoading)\r\n\treturn !isLoading ? (\r\n\t\t<ContentWrapped>\r\n\t\t\t<PostsActionsComponent posts={posts} />\r\n\t\t</ContentWrapped>\r\n\t) : <Preloader />\r\n}\r\nconst getStaticProps = async (): Promise<{ props: { posts: PostType[] } }> => {\r\n\tconst response = await API.PostsAPI.getPosts()\r\n\tconst posts = response.data\r\n\tconsole.log(posts)\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tposts,\r\n\t\t},\r\n\t}\r\n}\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}
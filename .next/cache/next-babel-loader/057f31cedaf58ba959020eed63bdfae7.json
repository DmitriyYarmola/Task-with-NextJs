{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\src\\\\Components\\\\UI\\\\Atoms\\\\Input.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nvar InputComponent = styled.input.withConfig({\n  displayName: \"Input__InputComponent\",\n  componentId: \"xxces0-0\"\n})([\"padding-left:10px;margin:0;border-radius:7px;&::placeholder{color:\", \";}\"], function (_ref) {\n  var colors = _ref.theme.colors;\n  return colors.grey;\n});\n_c = InputComponent;\nexport var Input = function Input(_ref2) {\n  var value = _ref2.value,\n      onChange = _ref2.onChange;\n  return __jsx(InputComponent, {\n    value: value,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n};\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/UI/Atoms/Input.tsx"],"names":["React","styled","InputComponent","input","colors","theme","grey","Input","value","onChange"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,IAAMC,cAAc,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,iFAKT;AAAA,MAAYC,MAAZ,QAAGC,KAAH,CAAYD,MAAZ;AAAA,SAAsCA,MAAM,CAACE,IAA7C;AAAA,CALS,CAApB;KAAMJ,c;AAYN,OAAO,IAAMK,KAA0B,GAAG,SAA7BA,KAA6B,QAA6C;AAAA,MAA1CC,KAA0C,SAA1CA,KAA0C;AAAA,MAAnCC,QAAmC,SAAnCA,QAAmC;AACtF,SAAO,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAED,KAAvB;AAA8B,IAAA,QAAQ,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CAFM;MAAMF,K","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ThemeType } from '@Styled/theme'\r\n\r\nconst InputComponent = styled.input`\r\n\tpadding-left: 10px;\r\n\tmargin: 0;\r\n\tborder-radius: 7px;\r\n\t&::placeholder {\r\n\t\tcolor: ${({ theme: { colors } }: ThemeType) => colors.grey};\r\n\t}\r\n`\r\ninterface PropsType {\r\n\tvalue: string\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const Input: React.FC<PropsType> = ({ value, onChange }): React.ReactElement => {\r\n\treturn <InputComponent value={value} onChange={onChange} />\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './root-reducer';\nimport { rootSaga } from './root-saga';\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware];\nexport var makeStore = function makeStore(initialState) {\n  return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n};\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Lib/Store/store.ts"],"names":["applyMiddleware","createStore","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","makeStore","initialState","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,IAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAuB;AAC/C,SAAOR,WAAW,CACjBG,WADiB,EAEjBK,YAFiB,EAGjBP,mBAAmB,CAACF,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CAHF,CAAlB;AAKA,CANM;AAaPD,cAAc,CAACI,GAAf,CAAmBL,QAAnB","sourcesContent":["import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootReducer } from './root-reducer'\r\nimport { rootSaga } from './root-saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middlewares = [sagaMiddleware]\r\nexport const makeStore = (initialState: any) => {\r\n\treturn createStore(\r\n\t\trootReducer,\r\n\t\tinitialState,\r\n\t\tcomposeWithDevTools(applyMiddleware(...middlewares))\r\n\t)\r\n}\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsType<\r\n\tT extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesType<T>>\r\n\r\nsagaMiddleware.run(rootSaga)\r\n"]},"metadata":{},"sourceType":"module"}
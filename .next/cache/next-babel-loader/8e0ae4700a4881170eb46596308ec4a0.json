{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getPostsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { actions } from '@Features/Posts/Model/actions';\nimport { API } from '@API/index';\nimport * as types from './types';\n\nfunction getPostsSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getPostsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('tes');\n          _context.next = 3;\n          return put(actions.setLoading(true));\n\n        case 3:\n          _context.prev = 3;\n          _context.next = 6;\n          return call(API.PostsAPI.getPosts);\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return put(actions.setPosts(response.data));\n\n        case 9:\n          _context.next = 11;\n          return put(actions.setLoading(false));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 17;\n          return put(actions.setLoading(false));\n\n        case 17:\n          console.log(_context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 13]]);\n}\n\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(types.GET_POSTS, getPostsSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/src/Components/Features/Posts/Model/saga.ts"],"names":["getPostsSaga","rootSaga","call","put","all","takeEvery","actions","API","types","console","log","setLoading","PostsAPI","getPosts","response","setPosts","data","GET_POSTS"],"mappings":";;oDAKUA,Y;qDAYOC,Q;;AAjBjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;AAEA,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACCS,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AADD;AAEC,iBAAMP,GAAG,CAACG,OAAO,CAACK,UAAR,CAAmB,IAAnB,CAAD,CAAT;;AAFD;AAAA;AAAA;AAImB,iBAAMT,IAAI,CAACK,GAAG,CAACK,QAAJ,CAAaC,QAAd,CAAV;;AAJnB;AAIQC,UAAAA,QAJR;AAAA;AAKE,iBAAMX,GAAG,CAACG,OAAO,CAACS,QAAR,CAAiBD,QAAQ,CAACE,IAA1B,CAAD,CAAT;;AALF;AAAA;AAME,iBAAMb,GAAG,CAACG,OAAO,CAACK,UAAR,CAAmB,KAAnB,CAAD,CAAT;;AANF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQE,iBAAMR,GAAG,CAACG,OAAO,CAACK,UAAR,CAAmB,KAAnB,CAAD,CAAT;;AARF;AASEF,UAAAA,OAAO,CAACC,GAAR;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAO,SAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAMG,GAAG,CAAC,CAACC,SAAS,CAACG,KAAK,CAACS,SAAP,EAAkBjB,YAAlB,CAAV,CAAD,CAAT;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, all, takeEvery } from 'redux-saga/effects'\r\nimport { actions } from '@Features/Posts/Model/actions'\r\nimport { API } from '@API/index'\r\nimport * as types from './types'\r\n\r\nfunction* getPostsSaga() {\r\n\tconsole.log('tes')\r\n\tyield put(actions.setLoading(true))\r\n\ttry {\r\n\t\tconst response = yield call(API.PostsAPI.getPosts)\r\n\t\tyield put(actions.setPosts(response.data))\r\n\t\tyield put(actions.setLoading(false))\r\n\t} catch (error) {\r\n\t\tyield put(actions.setLoading(false))\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\nexport function* rootSaga() {\r\n\tyield all([takeEvery(types.GET_POSTS, getPostsSaga)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Create-Project\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { MainTemplate } from '@UI/Templates';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '@Styled/theme';\nimport { Provider } from 'react-redux'; // import { makeStore } from '@Lib/Store'\n\nimport { store } from 'next/dist/build/output/store';\nimport { wrapper } from '@Lib/Store/store';\n\n// const MyApp: React.FC<PropsType> = ({ Component, pageProps }) => {\n// \tconst store = makeStore(pageProps.initialReduxState)\n// \treturn (\n// \t\t<Provider store={store}>\n// \t\t\t<ThemeProvider theme={theme}>\n// \t\t\t\t<MainTemplate>\n// \t\t\t\t\t<Component {...pageProps} />\n// \t\t\t\t</MainTemplate>\n// \t\t\t</ThemeProvider>\n// \t\t</Provider>\n// \t)\n// }\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(MainTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Create-Project/pages/_app.tsx"],"names":["React","MainTemplate","ThemeProvider","theme","Provider","store","wrapper","MyApp","Component","pageProps","withRedux"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAGA,SAASC,OAAT,QAAwB,kBAAxB;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,KAAyB,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAE7D,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD,CADD,CADF;AASA,CAXD;;AAaA,eAAeH,OAAO,CAACI,SAAR,CAAkBH,KAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { MainTemplate } from '@UI/Templates'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { theme } from '@Styled/theme'\r\nimport { Provider } from 'react-redux'\r\n// import { makeStore } from '@Lib/Store'\r\nimport { store } from 'next/dist/build/output/store'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport App, { AppContext, AppProps } from 'next/app'\r\nimport { wrapper } from '@Lib/Store/store'\r\n\r\ninterface PropsType {\r\n\tComponent: any\r\n\tpagePropsType: any\r\n}\r\n// const MyApp: React.FC<PropsType> = ({ Component, pageProps }) => {\r\n// \tconst store = makeStore(pageProps.initialReduxState)\r\n// \treturn (\r\n// \t\t<Provider store={store}>\r\n// \t\t\t<ThemeProvider theme={theme}>\r\n// \t\t\t\t<MainTemplate>\r\n// \t\t\t\t\t<Component {...pageProps} />\r\n// \t\t\t\t</MainTemplate>\r\n// \t\t\t</ThemeProvider>\r\n// \t\t</Provider>\r\n// \t)\r\n// }\r\n\r\nconst MyApp: React.FC<AppProps> = ({Component, pageProps}) => {\r\n\r\n\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<MainTemplate>\r\n\t\t\t\t\t\t<Component {...pageProps} />\r\n\t\t\t\t\t</MainTemplate>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n)\r\n}\r\n\r\nexport default wrapper.withRedux(MyApp)\r\n"]},"metadata":{},"sourceType":"module"}